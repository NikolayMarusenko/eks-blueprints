keycloakx:
  nameOverride: keycloakx
  fullnameOverride: keycloakx
  replicas: 1

  # Deploy the latest version
  image:
    tag: "20.0.3"

  # start: create OpenShift realm which is required by EDP
  extraInitContainers: |
    - name: realm-provider
      image: busybox
      imagePullPolicy: IfNotPresent
      command:
        - sh
      args:
        - -c
        - |
          echo '{"realm": "openshift","enabled": true}' > /opt/keycloak/data/import/openshift.json
      volumeMounts:
        - name: realm
          mountPath: /opt/keycloak/data/import

  extraVolumeMounts: |
    - name: realm
      mountPath: /opt/keycloak/data/import

  extraVolumes: |
    - name: realm
      emptyDir: {}

  command:
    - "/opt/keycloak/bin/kc.sh"
    - "--verbose"
    - "start"
    - "--auto-build"
    - "--http-enabled=true"
    - "--http-port=8080"
    - "--hostname-strict=false"
    - "--hostname-strict-https=false"
    - "--spi-events-listener-jboss-logging-success-level=info"
    - "--spi-events-listener-jboss-logging-error-level=warn"
    - "--import-realm"

  extraEnv: |
    - name: KC_PROXY
      value: "passthrough"
    - name: KEYCLOAK_ADMIN
      valueFrom:
        secretKeyRef:
          name: keycloak-admin-creds
          key: username
    - name: KEYCLOAK_ADMIN_PASSWORD
      valueFrom:
        secretKeyRef:
          name: keycloak-admin-creds
          key: password
    - name: JAVA_OPTS_APPEND
      value: >-
        -XX:+UseContainerSupport
        -XX:MaxRAMPercentage=50.0
        -Djava.awt.headless=true
        -Djgroups.dns.query={{ include "keycloak.fullname" . }}-headless

  # This block should be uncommented if you install Keycloak on Kubernetes
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      ingress.kubernetes.io/affinity: cookie
    rules:
      - host: keycloak.eks-test-mm.aws.main.edp.projects.epam.com
        paths:
          - path: '{{ tpl .Values.http.relativePath $ | trimSuffix "/" }}/'
            pathType: Prefix
autoscaling:
  # If `true`, an autoscaling/v2 HorizontalPodAutoscaler resource is created (requires Kubernetes 1.23 or above)
  # Autoscaling seems to be most reliable when using KUBE_PING service discovery (see README for details)
  # This disables the `replicas` field in the StatefulSet
  enabled: true
  # Additional HorizontalPodAutoscaler labels
  labels: {}
  # The minimum and maximum number of replicas for the Keycloak StatefulSet
  minReplicas: 3
  maxReplicas: 10
  # The metrics to use for scaling
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 80
  # The scaling policy to use. This will scale up quickly but only scale down a single Pod per 5 minutes.
  # This is important because caches are usually only replicated to 2 Pods and if one of those Pods is terminated this will give the cluster time to recover.
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: Pods
          value: 1
          periodSeconds: 300
  # This block should be uncommented if you set Keycloak to OpenShift and change the host field
  # route:
  #   enabled: false
  #   # Path for the Route
  #   path: '/'
  #   # Host name for the Route
  #   host: "keycloak.<ROOT_DOMAIN>"
  #   # TLS configuration
  #   tls:
  #     enabled: true

  resources:
    limits:
      memory: "2048Mi"
    requests:
      cpu: "50m"
      memory: "512Mi"

  # Check database readiness at startup
  dbchecker:
    enabled: true

  database:
    vendor: postgres
    existingSecret: keycloak-postgresql
    hostname: postgresql
    port: 5432
    username: admin
    database: keycloak
